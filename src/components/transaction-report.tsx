'use client';

import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from '@/components/ui/table';
import type { Expense, UserProfile } from '@/lib/types';
import { format, isValid } from 'date-fns';
import { Timestamp } from 'firebase/firestore';
import { Coins } from 'lucide-react';

interface TransactionReportProps {
  expenses: Expense[];
  user: UserProfile | null;
}

const formatCurrency = (amount: number) =>
  new Intl.NumberFormat('en-US', { style: 'currency', currency: 'PHP' }).format(amount).replace('PHP', 'â‚±');

export default function TransactionReport({ expenses, user }: TransactionReportProps) {
  return (
    <div className="bg-background text-foreground p-8 font-sans">
      <header className="mb-8">
        <div className="flex items-center justify-between pb-4 border-b">
          <div className="flex items-center gap-2">
            <Coins className="h-8 w-8 text-primary" />
            <span className="text-2xl font-semibold">PennyWise</span>
          </div>
          <div className="text-right">
            <h1 className="text-2xl font-bold">Transaction Report</h1>
            <p className="text-muted-foreground">{format(new Date(), 'MMMM d, yyyy')}</p>
          </div>
        </div>
        <div className="mt-4">
            <p className="font-semibold">{user?.username || 'User'}</p>
            <p className="text-sm text-muted-foreground">{user?.email}</p>
        </div>
      </header>

      <main>
        <Table>
          <TableHeader>
            <TableRow>
              <TableHead>Date</TableHead>
              <TableHead>Description</TableHead>
              <TableHead>Category</TableHead>
              <TableHead>Payment Method</TableHead>
              <TableHead className="text-right">Amount</TableHead>
            </TableRow>
          </TableHeader>
          <TableBody>
            {expenses.length > 0 ? (
              expenses.map((expense) => {
                const expenseDate = expense.date instanceof Timestamp ? expense.date.toDate() : new Date();
                return (
                  <TableRow key={expense.id}>
                    <TableCell>{isValid(expenseDate) ? format(expenseDate, 'MMM d, yyyy') : 'n/a'}</TableCell>
                    <TableCell className="font-medium">{expense.name}</TableCell>
                    <TableCell>{expense.category}</TableCell>
                    <TableCell>{expense.paymentMethod || 'N/A'}</TableCell>
                    <TableCell className="text-right font-medium">
                      -{formatCurrency(expense.amount)}
                    </TableCell>
                  </TableRow>
                );
              })
            ) : (
              <TableRow>
                <TableCell colSpan={5} className="text-center h-24">
                  No transactions to display.
                </TableCell>
              </TableRow>
            )}
          </TableBody>
        </Table>
      </main>
      
      <footer className="mt-8 text-center text-xs text-muted-foreground">
        <p>Generated by PennyWise</p>
      </footer>
    </div>
  );
}
